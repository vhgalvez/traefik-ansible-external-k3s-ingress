# ansible/playbooks/install_traefik.yml
---
- name: Instalar y Configurar Traefik como Ingress Controller usando Docker
  hosts: load_balancers
  become: true

  vars:
    traefik_config_dir: "/etc/traefik"
    kubeconfig_path: "/etc/traefik/traefik-kubeconfig.yaml"
    kubeconfig_backup_path: "/srv/nfs/traefik-token/traefik-kubeconfig.yaml"
    k8s_api_vip: "10.17.5.10"
    master1_ip: "10.17.4.21"
    storage_ip: "10.17.4.27"

  tasks:
    # Verificar si el kubeconfig_path existe como directorio y eliminarlo
    - name: ❌ Eliminar kubeconfig si es un directorio
      file:
        path: "{{ kubeconfig_path }}"
        state: absent
      when: kubeconfig_path | basename == 'traefik-kubeconfig.yaml'
      ignore_errors: true

    # Verificar si el archivo kubeconfig existe en master1
    - name: 🔍 Verificar si kubeconfig existe en master1
      delegate_to: "{{ master1_ip }}"
      run_once: true
      raw: test -f /etc/traefik/traefik-kubeconfig.yaml
      register: kubeconfig_exists
      ignore_errors: true

    - name: ❌ Abortamos si el archivo kubeconfig no existe en master1
      fail:
        msg: "El archivo kubeconfig no se encontró en master1. Verifica la creación del archivo."
      when: kubeconfig_exists.rc != 0

    # Copiar certificado CA del API server desde master1
    - name: 📄 Copiar certificado CA del API server desde master1
      delegate_to: "{{ master1_ip }}"
      run_once: true
      raw: cat /var/lib/rancher/k3s/server/tls/server-ca.crt
      register: server_ca_cert
      changed_when: false

    # Crear directorios para Traefik
    - name: 📁 Crear directorios para Traefik
      file:
        path: "{{ traefik_config_dir }}/certs"
        state: directory
        mode: "0755"
      changed_when: false

    # Crear directorio para kubeconfig si no existe
    - name: 📁 Crear directorio para kubeconfig si no existe
      file:
        path: "{{ traefik_config_dir }}"
        state: directory
        mode: "0755"

    # Verificar permisos del directorio de destino
    - name: Verificar permisos de /etc/traefik
      command: ls -ld /etc/traefik
      register: dir_permissions
      ignore_errors: true

    - name: Establecer permisos de escritura en /etc/traefik
      command: chmod 755 /etc/traefik
      when: dir_permissions.rc != 0

    # Fetch kubeconfig from master1 to Ansible controller
    - name: 🗂 Fetch kubeconfig from master1 to Ansible controller
      fetch:
        src: "{{ kubeconfig_path }}"
        dest: "/tmp/traefik-kubeconfig.yaml"
        flat: yes
      delegate_to: "{{ master1_ip }}"
      run_once: true
      become: false  # Ensure we fetch as the core user

    # Copiar kubeconfig a cada load balancer
    - name: 📤 Copiar kubeconfig a cada load balancer
      copy:
        src: "/tmp/traefik-kubeconfig.yaml"
        dest: "{{ kubeconfig_path }}"
        owner: root
        group: root
        mode: "0600"
      become: true  # Ensure root permissions on load balancer
      loop: "{{ groups['load_balancers'] }}"
      loop_control:
        loop_var: inventory_hostname

    - name: 🧹 Limpiar archivo temporal de kubeconfig
      file:
        path: "/tmp/traefik-kubeconfig.yaml"
        state: absent
      delegate_to: localhost
      run_once: true

    # Restante de configuración de Traefik
    - name: 🔧 Generar traefik.toml
      template:
        src: "{{ playbook_dir }}/templates/traefik/traefik.toml.j2"
        dest: "{{ traefik_config_dir }}/traefik.toml"
        mode: "0644"
      vars:
        vip: "{{ k8s_api_vip }}"

    - name: 🚓 Generar archivo docker-compose.yml
      template:
        src: "{{ playbook_dir }}/templates/traefik/docker-compose.yml.j2"
        dest: "{{ traefik_config_dir }}/docker-compose.yml"
        mode: "0644"
      vars:
        vip: "{{ k8s_api_vip }}"

    - name: Eliminar acme.json si es un directorio por error
      file:
        path: "{{ traefik_config_dir }}/acme.json"
        state: absent
        force: true

    - name: Crear archivo acme.json correctamente
      copy:
        dest: "{{ traefik_config_dir }}/acme.json"
        content: "{}"
        mode: "0600"

    - name: 🤩 Eliminar contenedor traefik si ya existe (evitar conflicto de nombres)
      shell: docker rm -f traefik || true
      args:
        executable: /bin/bash

    - name: ↺ Reiniciar contenedor Traefik con nuevo kubeconfig
      shell: docker compose -f {{ traefik_config_dir }}/docker-compose.yml up -d
      args:
        executable: /bin/bash

    - name: ✅ Verificar estado del contenedor Traefik
      shell: docker ps -a | grep traefik || true
      register: traefik_status

    - name: 📊 Mostrar estado del contenedor Traefik
      debug:
        msg: "{{ traefik_status.stdout_lines }}"

    - name: 🖼 Copiar unidad systemd traefik-docker.service
      template:
        src: "{{ playbook_dir }}/templates/traefik/traefik-docker.service.j2"
        dest: "/etc/systemd/system/traefik-docker.service"
        mode: "0644"

    - name: 🔁 Recargar systemd
      command: systemctl daemon-reload

    - name: ✅ Habilitar traefik-docker.service
      systemd:
        name: traefik-docker.service
        enabled: true

    - name: ▶️ Iniciar traefik-docker.service
      systemd:
        name: traefik-docker.service
        state: started