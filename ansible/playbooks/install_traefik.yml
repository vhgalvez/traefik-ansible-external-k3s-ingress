---
- name: Install and Configure Traefik as Ingress Controller using Docker
  hosts: load_balancers
  become: true
  gather_facts: false

  vars:
    traefik_config_dir: "/etc/traefik"
    traefik_env_file: "{{ traefik_config_dir }}/.env"
    kubeconfig_local_path: "/tmp/kubeconfig-traefik"
    kubeconfig_remote_path: "{{ traefik_config_dir }}/kubeconfig"
    cert_common_name: "traefik.local"
    certs_local_dir: "files/certs"
    k8s_api_vip: "10.17.5.10"
    traefik_token: ""

  tasks:

    - name: "📁 Crear directorios Traefik"
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ traefik_config_dir }}"
        - "{{ traefik_config_dir }}/certs"
        - "{{ traefik_config_dir }}/dynamic_conf"

    - name: "📄 Copiar certificados TLS"
      copy:
        src: "{{ certs_local_dir }}/{{ cert_common_name }}.{{ item }}"
        dest: "{{ traefik_config_dir }}/certs/{{ cert_common_name }}.{{ item }}"
        mode: "0644"
      loop:
        - crt
        - key

    - name: "📥 Obtener kubeconfig del master1 (raw)"
      delegate_to: 10.17.4.21
      raw: "cat /etc/rancher/k3s/k3s.yaml"
      register: raw_kubeconfig

    - name: "📝 Guardar kubeconfig en local"
      delegate_to: localhost
      copy:
        dest: "{{ kubeconfig_local_path }}"
        content: "{{ raw_kubeconfig.stdout }}"
        mode: "0600"

    - name: "🔁 Reemplazar 127.0.0.1 por VIP"
      delegate_to: localhost
      replace:
        path: "{{ kubeconfig_local_path }}"
        regexp: 'https://127.0.0.1:6443'
        replace: "https://{{ k8s_api_vip }}:6443"

    - name: "🛡️ Crear ServiceAccount y ClusterRoleBinding"
      delegate_to: localhost
      shell: |
        set -e
        KUBECONFIG={{ kubeconfig_local_path }} kubectl -n kube-system create serviceaccount traefik-ingress-controller --dry-run=client -o yaml | kubectl apply -f -
        KUBECONFIG={{ kubeconfig_local_path }} kubectl create clusterrolebinding traefik-ingress-controller --clusterrole=cluster-admin --serviceaccount=kube-system:traefik-ingress-controller --dry-run=client -o yaml | kubectl apply -f -

    - name: "🔐 Obtener token de acceso para Traefik"
      delegate_to: localhost
      shell: |
        TOKEN_NAME=$(kubectl --kubeconfig={{ kubeconfig_local_path }} -n kube-system get sa/traefik-ingress-controller -o jsonpath='{.secrets[0].name}')
        kubectl --kubeconfig={{ kubeconfig_local_path }} -n kube-system get secret $TOKEN_NAME -o jsonpath='{.data.token}' | base64 -d
      register: traefik_token_result

    - name: "📤 Copiar kubeconfig a Traefik node"
      copy:
        src: "{{ kubeconfig_local_path }}"
        dest: "{{ kubeconfig_remote_path }}"
        mode: "0644"

    - name: "⚙️ Generar archivo .env con token"
      copy:
        dest: "{{ traefik_env_file }}"
        mode: "0644"
        content: |
          TRAEFIK_CONFIG_DIR={{ traefik_config_dir }}
          TRAEFIK_CERT_CN={{ cert_common_name }}
          TRAEFIK_KUBECONFIG={{ kubeconfig_remote_path }}
          TRAEFIK_API_VIP={{ k8s_api_vip }}
          TRAEFIK_TOKEN={{ traefik_token_result.stdout }}

    - name: "🧪 Crear archivo acme.json (vacío)"
      copy:
        dest: "{{ traefik_config_dir }}/acme.json"
        content: "{}"
        mode: "0600"

    - name: "🧾 Generar traefik.toml desde plantilla"
      template:
        src: "../../templates/traefik/traefik.toml.j2"
        dest: "{{ traefik_config_dir }}/traefik.toml"
        mode: "0644"

    - name: "🧾 Generar docker-compose.yml"
      template:
        src: "../../templates/traefik/docker-compose.yml.j2"
        dest: "{{ traefik_config_dir }}/docker-compose.yml"
        mode: "0644"

    - name: "🔁 Reiniciar contenedor Traefik"
      shell: |
        docker compose -f {{ traefik_config_dir }}/docker-compose.yml down || true
        docker compose -f {{ traefik_config_dir }}/docker-compose.yml up -d
      args:
        executable: /bin/bash

    - name: "🔍 Mostrar estado del contenedor Traefik"
      shell: docker ps -a | grep traefik
      register: traefik_status

    - name: "📋 Estado del contenedor"
      debug:
        msg: "{{ traefik_status.stdout_lines }}"