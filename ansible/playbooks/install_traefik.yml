---
- name: 🚀 Instalar y Configurar Traefik como Ingress Controller usando Docker
  hosts: load_balancers
  become: true
  gather_facts: false

  vars:
    traefik_dir: /etc/traefik
    traefik_config_dir: /etc/traefik
    traefik_token_path: "{{ traefik_dir }}/token"
    master1_ip: 10.17.4.21
    vip: 10.17.5.10

  tasks:
    - name: 🐍 Instalar Python 3 y pip en AlmaLinux
      package:
        name:
          - python3
          - python3-pip
        state: present

    - name: 🔥 Eliminar podman y herramientas relacionadas si existen
      block:
        - name: 🛑 Detener contenedores Podman si existen
          ansible.builtin.shell: |
            podman ps -q | xargs -r podman stop
          ignore_errors: true

        - name: ❌ Desinstalar podman y buildah
          package:
            name:
              - podman
              - buildah
            state: absent
          ignore_errors: true

        - name: 🧹 Eliminar datos residuales de podman
          file:
            path: "{{ item }}"
            state: absent
          loop:
            - /var/lib/containers
            - /etc/containers
          ignore_errors: true

    - name: 🐳 Instalar Docker en AlmaLinux
      block:
        - name: 🔍 Verificar si Docker ya está instalado
          command: which docker
          register: docker_check
          ignore_errors: true

        - name: 🔥 Eliminar Docker existente (si está presente)
          when: docker_check.rc == 0
          block:
            - name: 🛑 Detener Docker si está en ejecución
              systemd:
                name: docker
                state: stopped
              ignore_errors: true

            - name: ❌ Desinstalar paquetes Docker
              package:
                name:
                  - docker-ce
                  - docker-ce-cli
                  - containerd.io
              state: absent
              ignore_errors: true

            - name: 🧹 Eliminar directorios relacionados
              file:
                path: "{{ item }}"
                state: absent
              loop:
                - /var/lib/docker
                - /etc/docker
                - /var/run/docker.sock
              ignore_errors: true

        - name: 🔧 Instalar dependencias para Docker
          package:
            name:
              - yum-utils
              - device-mapper-persistent-data
              - lvm2
            state: present

        - name: 📦 Añadir repositorio oficial de Docker (CentOS compatible)
          get_url:
            url: https://download.docker.com/linux/centos/docker-ce.repo
            dest: /etc/yum.repos.d/docker-ce.repo

        - name: 📦 Instalar Docker CE
          package:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
            state: present

        - name: ▶️ Habilitar y arrancar el servicio Docker
          systemd:
            name: docker
            state: started
            enabled: true

    - name: 📦 Instalar Docker SDK y docker-compose con pip
      pip:
        name:
          - docker==5.0.3
          - docker-compose==1.29.2
        executable: pip3

    - name: 📁 Crear directorios Traefik
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ traefik_dir }}"
        - "{{ traefik_dir }}/certs"
        - "{{ traefik_dir }}/dynamic_conf"

    - name: 📄 Copiar certificados TLS
      copy:
        src: "files/certs/traefik.local.{{ item }}"
        dest: "{{ traefik_dir }}/certs/traefik.local.{{ item }}"
        mode: "0644"
      loop:
        - crt
        - key

    - name: 🛡️ Crear ServiceAccount para Traefik
      delegate_to: "{{ master1_ip }}"
      raw: |
        kubectl --kubeconfig=/etc/rancher/k3s/k3s.yaml -n kube-system create serviceaccount traefik-ingress-controller --dry-run=client -o yaml | kubectl apply -f -

    - name: 🔐 Crear ClusterRoleBinding para Traefik
      delegate_to: "{{ master1_ip }}"
      raw: |
        kubectl --kubeconfig=/etc/rancher/k3s/k3s.yaml create clusterrolebinding traefik-ingress-controller --clusterrole=cluster-admin --serviceaccount=kube-system:traefik-ingress-controller --dry-run=client -o yaml | kubectl apply -f -

    - name: 🔑 Obtener token del ServiceAccount
      delegate_to: "{{ master1_ip }}"
      raw: |
        kubectl --kubeconfig=/etc/rancher/k3s/k3s.yaml -n kube-system get secret $(kubectl --kubeconfig=/etc/rancher/k3s/k3s.yaml -n kube-system get sa traefik-ingress-controller -o jsonpath="{.secrets[0].name}") -o jsonpath="{.data.token}" | base64 -d
      register: sa_token

    - name: 💾 Guardar token en archivo
      copy:
        content: "{{ sa_token.stdout }}"
        dest: "{{ traefik_token_path }}"
        mode: "0600"

    - name: 📦 Copiar archivo .env con token y configuración
      template:
        src: templates/traefik/env.j2
        dest: "{{ traefik_dir }}/.env"
        mode: "0644"

    - name: 🐳 Generar docker-compose.yml para Traefik
      template:
        src: templates/traefik/docker-compose.yml.j2
        dest: "{{ traefik_dir }}/docker-compose.yml"
        mode: "0644"

    - name: 🔍 Verificar existencia del socket Docker
      stat:
        path: /var/run/docker.sock
      register: docker_sock

    - name: ❌ Fallar si Docker socket no existe
      fail:
        msg: "❌ No se encontró /var/run/docker.sock. Docker no está disponible o no tiene permisos."
      when: not docker_sock.stat.exists

    - name: 🚀 Lanzar contenedor Traefik con docker compose CLI
      shell: |
        docker compose -f {{ traefik_dir }}/docker-compose.yml --env-file {{ traefik_dir }}/.env up -d
      args:
        executable: /bin/bash