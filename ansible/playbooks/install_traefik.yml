---
- name: 🚀 Instalar y Configurar Traefik como Ingress Controller usando Docker
  hosts: load_balancers
  become: true

  vars:
    traefik_config_dir: "/etc/traefik"
    traefik_token_path: "/etc/traefik/token"
    traefik_env_path: "/etc/traefik/.env"
    k8s_api_vip: "10.17.5.10"
    master1_ip: "10.17.4.21"

  tasks:
    - name: 🔥 Eliminar Podman y herramientas relacionadas
      package:
        name:
          - podman
          - podman-docker
          - buildah
        state: absent
      ignore_errors: true

    - name: 🧹 Eliminar carpetas de contenedores si existen
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /var/lib/containers
        - /etc/containers
      ignore_errors: true

    - name: 🐳 Instalar Docker CE y plugin docker compose
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: ▶️ Habilitar y arrancar Docker
      systemd:
        name: docker
        enabled: true
        state: started

    - name: 📁 Crear directorios para Traefik
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      loop:
        - "{{ traefik_config_dir }}"
        - "{{ traefik_config_dir }}/certs"
        - "{{ traefik_config_dir }}/dynamic_conf"

    - name: 📄 Copiar certificados TLS
      copy:
        src: "files/certs/traefik.local.{{ item }}"
        dest: "{{ traefik_config_dir }}/certs/traefik.local.{{ item }}"
        mode: "0644"
      loop:
        - crt
        - key

    - name: 🧹 Eliminar traefik.toml si es un directorio por error
      file:
        path: "{{ traefik_config_dir }}/traefik.toml"
        state: absent
        force: true

    - name: 📄 Crear archivo acme.json
      copy:
        dest: "{{ traefik_config_dir }}/acme.json"
        content: "{}"
        mode: "0600"

    - name: 🔑 Obtener token de K3s desde master1
      delegate_to: "{{ master1_ip }}"
      become: true
      run_once: true
      command: cat /etc/rancher/k3s/server/node-token
      register: sa_token
      changed_when: false

    - name: 📝 Guardar token en los nodos Traefik (con raw)
      raw: echo "{{ sa_token.stdout }}" > {{ traefik_token_path }}

    - name: ⚙️ Generar traefik.toml
      template:
        src: "ansible/playbooks/templates/traefik/traefik.toml.j2"
        dest: "{{ traefik_config_dir }}/traefik.toml"
        mode: "0644"
      vars:
        traefik_token: "{{ sa_token.stdout }}"
        vip: "{{ k8s_api_vip }}"

    - name: ⚙️ Generar archivo .env
      template:
        src: "ansible/playbooks/templates/traefik/env.j2"
        dest: "{{ traefik_env_path }}"
        mode: "0644"
      vars:
        vip: "{{ k8s_api_vip }}"
        traefik_dir: "{{ traefik_config_dir }}"
        traefik_token_path: "{{ traefik_token_path }}"

    - name: 🐳 Generar archivo docker-compose.yml
      template:
        src: "ansible/playbooks/templates/traefik/docker-compose.yml.j2"
        dest: "{{ traefik_config_dir }}/docker-compose.yml"
        mode: "0644"

    - name: 🚀 Lanzar o reiniciar contenedor Traefik
      shell: |
        docker compose -f {{ traefik_config_dir }}/docker-compose.yml --env-file {{ traefik_env_path }} down || true
        docker compose -f {{ traefik_config_dir }}/docker-compose.yml --env-file {{ traefik_env_path }} up -d
      args:
        executable: /bin/bash

    - name: ✅ Verificar estado del contenedor Traefik
      shell: docker ps -a | grep traefik
      register: traefik_status

    - name: 📋 Mostrar estado del contenedor Traefik
      debug:
        msg: "{{ traefik_status.stdout_lines }}"